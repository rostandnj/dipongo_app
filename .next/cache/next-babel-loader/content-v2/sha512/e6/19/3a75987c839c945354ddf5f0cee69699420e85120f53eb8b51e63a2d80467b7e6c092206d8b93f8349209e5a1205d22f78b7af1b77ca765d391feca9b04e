{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/store.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, ReactNode, useState, useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nvar authContextDefaultValues = {\n  session: null,\n  updateSession: function updateSession() {},\n  deleteSession: function deleteSession() {}\n};\nvar AuthContext = /*#__PURE__*/createContext(authContextDefaultValues);\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      session = _useState[0],\n      setSession = _useState[1];\n\n  var updateSession = function updateSession(s) {\n    setSession(s);\n  };\n\n  var deleteSession = function deleteSession() {\n    setSession(null);\n\n    if (true) {\n      localStorage.removeItem(\"user\");\n    }\n\n    router.push('/');\n  };\n\n  var value = {\n    session: session,\n    updateSession: updateSession,\n    deleteSession: deleteSession\n  };\n  var isAuth = false;\n  var publicPath = ['/', '/login', '/signin'];\n  var router = useRouter();\n  useEffect(function () {\n    if (true) {\n      isAuth = localStorage.getItem(\"user\") !== null;\n      setSession({\n        name: 'nj'\n      });\n      /* if(!isAuth){\n           if(!publicPath.includes(router.pathname)){\n               router.push('/')\n           }\n       }*/\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s2(AuthProvider, \"w3NDIhhRnfGicA8z+GESvJD9hhk=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/store.js"],"names":["createContext","useContext","ReactNode","useState","useEffect","useRouter","authContextDefaultValues","session","updateSession","deleteSession","AuthContext","useAuth","AuthProvider","children","setSession","s","localStorage","removeItem","router","push","value","isAuth","publicPath","getItem","name"],"mappings":";;;;;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,QAA9C,EAAwDC,SAAxD,QAAwE,OAAxE;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,wBAAwB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,IADoB;AAE7BC,EAAAA,aAAa,EAAE,yBAAM,CAAE,CAFM;AAG7BC,EAAAA,aAAa,EAAE,yBAAM,CAAE;AAHM,CAAjC;AAKA,IAAMC,WAAW,gBAAGV,aAAa,CAACM,wBAAD,CAAjC;AAEA,OAAO,SAASK,OAAT,GAAmB;AAAA;;AACtB,SAAOV,UAAU,CAACS,WAAD,CAAjB;AACH;;GAFeC,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACTV,QAAQ,CAAC,IAAD,CADC;AAAA,MAChCI,OADgC;AAAA,MACvBO,UADuB;;AAEvC,MAAMN,aAAa,GAAG,SAAhBA,aAAgB,CAACO,CAAD,EAAO;AACzBD,IAAAA,UAAU,CAACC,CAAD,CAAV;AACH,GAFD;;AAGA,MAAMN,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBK,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,cAAkC;AAC9BE,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH;;AACDC,IAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH,GAND;;AAOA,MAAMC,KAAK,GAAG;AACVb,IAAAA,OAAO,EAAPA,OADU;AAEVC,IAAAA,aAAa,EAAbA,aAFU;AAGVC,IAAAA,aAAa,EAAbA;AAHU,GAAd;AAKA,MAAIY,MAAM,GAAG,KAAb;AACA,MAAMC,UAAU,GAAG,CAAC,GAAD,EAAK,QAAL,EAAc,SAAd,CAAnB;AACA,MAAMJ,MAAM,GAAGb,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACZ,cAAkC;AAC9BiB,MAAAA,MAAM,GAAIL,YAAY,CAACO,OAAb,CAAqB,MAArB,MAAiC,IAA3C;AACAT,MAAAA,UAAU,CAAC;AAACU,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAV;AACD;AACX;AACA;AACA;AACA;AACS;AAEJ,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEJ,KAA7B;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH;;IAzCeD,Y;UAmBGP,S;;;KAnBHO,Y","sourcesContent":["import {createContext, useContext, ReactNode, useState, useEffect} from \"react\";\nimport { useRouter } from 'next/router'\n\nconst authContextDefaultValues = {\n    session: null,\n    updateSession: () => {},\n    deleteSession: () => {},\n};\nconst AuthContext = createContext(authContextDefaultValues);\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [session, setSession] = useState(null);\n    const updateSession = (s) => {\n        setSession(s);\n    };\n    const deleteSession = () => {\n        setSession(null);\n        if (typeof window !== \"undefined\"){\n            localStorage.removeItem(\"user\");\n        }\n        router.push('/')\n    };\n    const value = {\n        session,\n        updateSession,\n        deleteSession\n    };\n    let isAuth = false;\n    const publicPath = ['/','/login','/signin'];\n    const router = useRouter()\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\"){\n            isAuth  = localStorage.getItem(\"user\") !== null;\n            setSession({name:'nj'})\n           /* if(!isAuth){\n                if(!publicPath.includes(router.pathname)){\n                    router.push('/')\n                }\n            }*/\n        }\n\n    }, [])\n\n    return (\n        <>\n            <AuthContext.Provider value={value}>\n                {children}\n            </AuthContext.Provider>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}