{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/store.js\";\nimport { createContext, useContext, ReactNode, useState } from \"react\";\nconst AuthContext = /*#__PURE__*/createContext({\n  session: null,\n  updateSession: () => {}\n});\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const {\n    0: session,\n    1: setSession\n  } = useState(null);\n\n  const updateSession = s => {\n    setSession(s);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: session,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/store.js"],"names":["createContext","useContext","ReactNode","useState","AuthContext","session","updateSession","useAuth","AuthProvider","children","setSession","s"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;AAACK,EAAAA,OAAO,EAAC,IAAT;AAAeC,EAAAA,aAAa,EAAE,MAAI,CAAE;AAApC,CAAD,CAAjC;AAEA,OAAO,SAASC,OAAT,GAAmB;AACtB,SAAON,UAAU,CAACG,WAAD,CAAjB;AACH;AAED,OAAO,SAASI,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACvC,QAAM;AAAA,OAACJ,OAAD;AAAA,OAAUK;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMG,aAAa,GAAIK,CAAD,IAAO;AACzBD,IAAAA,UAAU,CAACC,CAAD,CAAV;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEN,OAA7B;AAAA,gBACKI;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH","sourcesContent":["import { createContext, useContext, ReactNode, useState } from \"react\";\n\nconst AuthContext = createContext({session:null, updateSession: ()=>{}});\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [session, setSession] = useState(null);\n    const updateSession = (s) => {\n        setSession(s);\n    };\n\n    return (\n        <>\n            <AuthContext.Provider value={session}>\n                {children}\n            </AuthContext.Provider>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}