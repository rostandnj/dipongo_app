{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/libs/contextLib.js\";\nimport { createContext, useContext, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nconst AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper({\n  children\n}) {\n  let sharedState = null;\n  const router = useRouter();\n  let isAuth = false;\n\n  if (false) {\n    isAuth = localStorage.getItem(\"user\") !== null;\n  }\n\n  useEffect(() => {\n    if (!isAuth) {\n      router.push('/', undefined, {\n        shallow: true\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: sharedState,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/libs/contextLib.js"],"names":["createContext","useContext","useEffect","useRouter","AppContext","AppWrapper","children","sharedState","router","isAuth","localStorage","getItem","push","undefined","shallow","useAppContext"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,MAAMC,UAAU,gBAAGJ,aAAa,EAAhC;AAEA,OAAO,SAASK,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AACrC,MAAIC,WAAW,GAAG,IAAlB;AAEA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAIM,MAAM,GAAG,KAAb;;AACA,aAAkC;AAC9BA,IAAAA,MAAM,GAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAA3C;AAEH;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACO,MAAJ,EAAW;AACPD,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBC,SAAjB,EAA4B;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA5B;AACH;AAEJ,GALQ,EAKN,EALM,CAAT;AAOA,sBACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEP,WAA5B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,SAASS,aAAT,GAAyB;AAC5B,SAAOd,UAAU,CAACG,UAAD,CAAjB;AACH","sourcesContent":["import {createContext, useContext, useEffect} from 'react';\nimport {useRouter} from \"next/router\";\n\nconst AppContext = createContext();\n\nexport function AppWrapper({ children }) {\n    let sharedState = null;\n\n    const router = useRouter()\n    let isAuth = false;\n    if (typeof window !== \"undefined\"){\n        isAuth  = localStorage.getItem(\"user\") !== null;\n\n    }\n\n    useEffect(() => {\n        if(!isAuth){\n            router.push('/', undefined, { shallow: true })\n        }\n\n    }, [])\n\n    return (\n        <AppContext.Provider value={sharedState}>\n            {children}\n        </AppContext.Provider>\n    );\n}\n\nexport function useAppContext() {\n    return useContext(AppContext);\n}\n"]},"metadata":{},"sourceType":"module"}