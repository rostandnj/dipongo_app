{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/store.js\";\nimport { createContext, useContext, ReactNode, useState, useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { URL } from \"./urlapi\";\nconst authContextDefaultValues = {\n  session: null,\n  updateSession: () => {},\n  deleteSession: () => {},\n  initSession: () => {}\n};\nconst AuthContext = /*#__PURE__*/createContext(authContextDefaultValues);\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const {\n    0: session,\n    1: setSession\n  } = useState(null);\n\n  const updateSession = s => {\n    console.log('hey');\n\n    if (false) {\n      if (s.running_session !== undefined) {\n        localStorage.setItem(\"session\", JSON.stringify(s.running_session));\n        setSession({\n          session: s.running_session\n        });\n      }\n    }\n  };\n\n  const deleteSession = () => {\n    if (false) {\n      setSession(null);\n      const token = localStorage.getItem(\"token\");\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"session\");\n\n      if (token !== null) {\n        axios.get(URL + '/api/leave/game', {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        }).then(result => {\n          router.push('/').then(res => {});\n        }).catch(error => {\n          router.push('/').then(res => {});\n        });\n      } else {\n        router.push('/').then(res => {});\n      }\n    }\n  };\n\n  const initSession = data => {\n    if (false) {\n      if (data.running_session === null) {\n        localStorage.setItem(\"session\", null);\n      } else {\n        localStorage.setItem(\"session\", JSON.stringify(data.running_session));\n      }\n\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n    }\n\n    setSession(data);\n\n    if (data.running_session !== null) {\n      router.push('/roadmap');\n    } else {\n      router.push('/onboard');\n    }\n  };\n\n  const clearStorage = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"session\");\n  };\n\n  const value = {\n    session,\n    updateSession,\n    deleteSession,\n    initSession\n  };\n  let isAuth = false;\n  const publicPath = ['/', '/login', '/signin'];\n  const router = useRouter();\n  useEffect(() => {\n    if (false) {\n      isAuth = localStorage.getItem(\"user\") !== null;\n\n      if (!isAuth) {\n        if (!publicPath.includes(router.pathname)) {\n          deleteSession();\n          router.push('/');\n        } else {\n          deleteSession();\n          router.push('/');\n        }\n      } else {\n        let token = localStorage.getItem(\"token\");\n        let deT = jwt_decode(token);\n        let exp = deT.exp;\n        let time = Date.now() / 1000;\n\n        if (time > exp) {\n          router.push('/login');\n        } else {\n          axios.get(URL + '/api/user/info', {\n            headers: {\n              'Authorization': 'Bearer ' + token\n            }\n          }).then(result => {\n            if (result.data.data.running_session !== null) {\n              setSession({\n                session: result.data.data.running_session\n              });\n              localStorage.setItem(\"session\", JSON.stringify(result.data.data.running_session));\n\n              if (router.pathname === '/') {\n                clearStorage();\n              } else {\n                if (router.pathname.includes('onboard')) {\n                  router.push('/roadmap');\n                }\n              }\n            } else {\n              setSession({\n                session: null\n              });\n              localStorage.removeItem(\"session\");\n              router.push('/onboard');\n            }\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/store.js"],"names":["createContext","useContext","ReactNode","useState","useEffect","useRouter","jwt_decode","axios","URL","authContextDefaultValues","session","updateSession","deleteSession","initSession","AuthContext","useAuth","AuthProvider","children","setSession","s","console","log","running_session","undefined","localStorage","setItem","JSON","stringify","token","getItem","removeItem","get","headers","then","result","router","push","res","catch","error","data","user","clearStorage","value","isAuth","publicPath","includes","pathname","deT","exp","time","Date","now"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,QAA9C,EAAwDC,SAAxD,QAAwE,OAAxE;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,UAAlB;AAEA,MAAMC,wBAAwB,GAAG;AAC7BC,EAAAA,OAAO,EAAE,IADoB;AAE7BC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAFM;AAG7BC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAHM;AAI7BC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAJQ,CAAjC;AAMA,MAAMC,WAAW,gBAAGd,aAAa,CAACS,wBAAD,CAAjC;AAEA,OAAO,SAASM,OAAT,GAAmB;AACtB,SAAOd,UAAU,CAACa,WAAD,CAAjB;AACH;AAED,OAAO,SAASE,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACvC,QAAM;AAAA,OAACP,OAAD;AAAA,OAAUQ;AAAV,MAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMQ,aAAa,GAAIQ,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,eAAkC;AAC9B,UAAGF,CAAC,CAACG,eAAF,KAAsBC,SAAzB,EAAmC;AAC/BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeR,CAAC,CAACG,eAAjB,CAA/B;AACAJ,QAAAA,UAAU,CAAC;AAACR,UAAAA,OAAO,EAAES,CAAC,CAACG;AAAZ,SAAD,CAAV;AACH;AAEJ;AACJ,GATD;;AAUA,QAAMV,aAAa,GAAG,MAAM;AACxB,eAAkC;AAC9BM,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMU,KAAK,GAAGJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAd;AACAL,MAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACAN,MAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACAN,MAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;;AACA,UAAGF,KAAK,KAAI,IAAZ,EAAiB;AACbrB,QAAAA,KAAK,CAACwB,GAAN,CAAUvB,GAAG,GAAG,iBAAhB,EAAmC;AAC/BwB,UAAAA,OAAO,EAAE;AACL,6BAAiB,YAAYJ;AADxB;AADsB,SAAnC,EAIGK,IAJH,CAISC,MAAD,IAAU;AACdC,UAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBH,IAAjB,CAAuBI,GAAD,IAAO,CAAE,CAA/B;AACH,SAND,EAMGC,KANH,CAMUC,KAAD,IAAS;AACdJ,UAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBH,IAAjB,CAAuBI,GAAD,IAAO,CAAE,CAA/B;AACH,SARD;AASH,OAVD,MAWI;AACAF,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBH,IAAjB,CAAuBI,GAAD,IAAO,CAAE,CAA/B;AACH;AAGJ;AAGJ,GA1BD;;AA2BA,QAAMxB,WAAW,GAAI2B,IAAD,IAAU;AAC1B,eAAkC;AAC9B,UAAGA,IAAI,CAAClB,eAAL,KAAyB,IAA5B,EAAiC;AAC7BE,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACH,OAFD,MAEK;AACDD,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BC,IAAI,CAACC,SAAL,CAAea,IAAI,CAAClB,eAApB,CAA/B;AACH;;AACDE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6Be,IAAI,CAACZ,KAAlC;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAea,IAAI,CAACC,IAApB,CAA5B;AAEH;;AACDvB,IAAAA,UAAU,CAACsB,IAAD,CAAV;;AACA,QAAGA,IAAI,CAAClB,eAAL,KAAyB,IAA5B,EAAiC;AAC9Ba,MAAAA,MAAM,CAACC,IAAP,CAAY,UAAZ;AACF,KAFD,MAGI;AACDD,MAAAA,MAAM,CAACC,IAAP,CAAY,UAAZ;AACF;AACJ,GAlBD;;AAmBA,QAAMM,YAAY,GAAG,MAAM;AACvBlB,IAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACAN,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACAN,IAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;AACH,GAJD;;AAKA,QAAMa,KAAK,GAAG;AACVjC,IAAAA,OADU;AAEVC,IAAAA,aAFU;AAGVC,IAAAA,aAHU;AAIVC,IAAAA;AAJU,GAAd;AAMA,MAAI+B,MAAM,GAAG,KAAb;AACA,QAAMC,UAAU,GAAG,CAAC,GAAD,EAAK,QAAL,EAAc,SAAd,CAAnB;AACA,QAAMV,MAAM,GAAG9B,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,eAAkC;AAC9BwC,MAAAA,MAAM,GAAIpB,YAAY,CAACK,OAAb,CAAqB,MAArB,MAAiC,IAA3C;;AAED,UAAG,CAACe,MAAJ,EAAW;AACP,YAAG,CAACC,UAAU,CAACC,QAAX,CAAoBX,MAAM,CAACY,QAA3B,CAAJ,EAAyC;AACrCnC,UAAAA,aAAa;AACbuB,UAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH,SAHD,MAGK;AACDxB,UAAAA,aAAa;AACbuB,UAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH;AACJ,OARD,MASI;AAEA,YAAIR,KAAK,GAAGJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAZ;AACA,YAAImB,GAAG,GAAG1C,UAAU,CAACsB,KAAD,CAApB;AACA,YAAIqB,GAAG,GAAGD,GAAG,CAACC,GAAd;AACA,YAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,KAAW,IAAtB;;AACA,YAAGF,IAAI,GAAGD,GAAV,EAAc;AACVd,UAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ;AACH,SAFD,MAII;AAEI7B,UAAAA,KAAK,CAACwB,GAAN,CAAUvB,GAAG,GAAG,gBAAhB,EAAkC;AAC9BwB,YAAAA,OAAO,EAAE;AACL,+BAAiB,YAAYJ;AADxB;AADqB,WAAlC,EAIGK,IAJH,CAISC,MAAD,IAAU;AACf,gBAAGA,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBlB,eAAjB,KAAqC,IAAxC,EAA6C;AACzCJ,cAAAA,UAAU,CAAC;AAACR,gBAAAA,OAAO,EAAEwB,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBlB;AAA3B,eAAD,CAAV;AACAE,cAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeO,MAAM,CAACM,IAAP,CAAYA,IAAZ,CAAiBlB,eAAhC,CAA/B;;AAEA,kBAAGa,MAAM,CAACY,QAAP,KAAoB,GAAvB,EAA2B;AACvBL,gBAAAA,YAAY;AACf,eAFD,MAGA;AACI,oBAAGP,MAAM,CAACY,QAAP,CAAgBD,QAAhB,CAAyB,SAAzB,CAAH,EAAuC;AACnCX,kBAAAA,MAAM,CAACC,IAAP,CAAY,UAAZ;AACH;AACJ;AAEJ,aAbD,MAcI;AACAlB,cAAAA,UAAU,CAAC;AAACR,gBAAAA,OAAO,EAAE;AAAV,eAAD,CAAV;AACAc,cAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;AACAK,cAAAA,MAAM,CAACC,IAAP,CAAY,UAAZ;AACH;AAEH,WAzBD,EAyBGE,KAzBH,CAyBUC,KAAD,IAAS;AACdnB,YAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AAEH,WA5BD;AA6BP;AACJ;AACH;AAEJ,GA1DQ,EA0DN,EA1DM,CAAT;AA4DA,sBACI;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEI,KAA7B;AAAA,gBACK1B;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH","sourcesContent":["import {createContext, useContext, ReactNode, useState, useEffect} from \"react\";\nimport { useRouter } from 'next/router'\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport {URL} from \"./urlapi\";\n\nconst authContextDefaultValues = {\n    session: null,\n    updateSession: () => {},\n    deleteSession: () => {},\n    initSession: () => {},\n};\nconst AuthContext = createContext(authContextDefaultValues);\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [session, setSession] = useState(null);\n    const updateSession = (s) => {\n        console.log('hey')\n        if (typeof window !== \"undefined\"){\n            if(s.running_session !== undefined){\n                localStorage.setItem(\"session\",JSON.stringify(s.running_session));\n                setSession({session: s.running_session});\n            }\n\n        }\n    };\n    const deleteSession = () => {\n        if (typeof window !== \"undefined\"){\n            setSession(null);\n            const token = localStorage.getItem(\"token\")\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"session\");\n            if(token!== null){\n                axios.get(URL + '/api/leave/game', {\n                    headers: {\n                        'Authorization': 'Bearer ' + token\n                    }\n                }).then((result)=>{\n                    router.push('/').then((res)=>{})\n                }).catch((error)=>{\n                    router.push('/').then((res)=>{})\n                });\n            }\n            else{\n                router.push('/').then((res)=>{})\n            }\n\n\n        }\n\n\n    };\n    const initSession = (data) => {\n        if (typeof window !== \"undefined\"){\n            if(data.running_session === null){\n                localStorage.setItem(\"session\",null);\n            }else{\n                localStorage.setItem(\"session\",JSON.stringify(data.running_session));\n            }\n            localStorage.setItem(\"token\",data.token);\n            localStorage.setItem(\"user\",JSON.stringify(data.user));\n\n        }\n        setSession(data);\n        if(data.running_session !== null){\n           router.push('/roadmap')\n        }\n        else{\n           router.push('/onboard')\n        }\n    };\n    const clearStorage = () => {\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"session\");\n    }\n    const value = {\n        session,\n        updateSession,\n        deleteSession,\n        initSession\n    };\n    let isAuth = false;\n    const publicPath = ['/','/login','/signin'];\n    const router = useRouter()\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\"){\n            isAuth  = localStorage.getItem(\"user\") !== null;\n\n           if(!isAuth){\n               if(!publicPath.includes(router.pathname)){\n                   deleteSession();\n                   router.push('/')\n               }else{\n                   deleteSession();\n                   router.push('/')\n               }\n           }\n           else{\n\n               let token = localStorage.getItem(\"token\");\n               let deT = jwt_decode(token);\n               let exp = deT.exp;\n               let time = Date.now()/1000;\n               if(time > exp){\n                   router.push('/login')\n               }\n               else\n                   {\n\n                       axios.get(URL + '/api/user/info', {\n                           headers: {\n                               'Authorization': 'Bearer ' + token\n                           }\n                       }).then((result)=>{\n                          if(result.data.data.running_session !== null){\n                              setSession({session: result.data.data.running_session})\n                              localStorage.setItem(\"session\",JSON.stringify(result.data.data.running_session))\n\n                              if(router.pathname === '/'){\n                                  clearStorage();\n                              }\n                          else{\n                                  if(router.pathname.includes('onboard')){\n                                      router.push('/roadmap')\n                                  }\n                              }\n\n                          }\n                          else{\n                              setSession({session: null})\n                              localStorage.removeItem(\"session\")\n                              router.push('/onboard')\n                          }\n\n                       }).catch((error)=>{\n                           console.log(error)\n\n                       });\n               }\n           }\n        }\n\n    }, [])\n\n    return (\n        <>\n            <AuthContext.Provider value={value}>\n                {children}\n            </AuthContext.Provider>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}