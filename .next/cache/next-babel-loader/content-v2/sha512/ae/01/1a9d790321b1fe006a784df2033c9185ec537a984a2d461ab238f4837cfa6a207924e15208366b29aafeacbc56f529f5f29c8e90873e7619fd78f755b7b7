{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/store.js\";\nimport { createContext, useContext, ReactNode, useState, useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nimport jwt_decode from \"jwt-decode\";\nconst authContextDefaultValues = {\n  session: null,\n  updateSession: () => {},\n  deleteSession: () => {},\n  initSession: () => {}\n};\nconst AuthContext = /*#__PURE__*/createContext(authContextDefaultValues);\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const {\n    0: session,\n    1: setSession\n  } = useState(null);\n\n  const updateSession = s => {\n    if (false) {\n      console.log(s);\n      console.log(s.running_session);\n\n      if (s.running_session !== undefined) {\n        localStorage.setItem(\"session\", JSON.stringify(s.running_session));\n        setSession({\n          session: s.running_session\n        });\n      }\n    }\n  };\n\n  const deleteSession = () => {\n    setSession(null);\n\n    if (false) {\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"session\");\n    }\n\n    router.push('/');\n  };\n\n  const initSession = data => {\n    if (false) {\n      if (data.running_session === null) {\n        localStorage.setItem(\"session\", null);\n      } else {\n        localStorage.setItem(\"session\", JSON.stringify(data.running_session));\n      }\n\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n    }\n\n    setSession(data);\n\n    if (data.running_session !== null) {\n      router.push('/roadmap');\n    } else {\n      router.push('/onboard');\n    }\n  };\n\n  const value = {\n    session,\n    updateSession,\n    deleteSession,\n    initSession\n  };\n  let isAuth = false;\n  const publicPath = ['/', '/login', '/signin'];\n  const router = useRouter();\n  useEffect(() => {\n    if (false) {\n      isAuth = localStorage.getItem(\"user\") !== null;\n\n      if (!isAuth) {\n        if (!publicPath.includes(router.pathname)) {\n          deleteSession();\n          router.push('/');\n        } else {\n          deleteSession();\n          router.push('/');\n        }\n      } else {\n        let token = localStorage.getItem(\"token\");\n        let deT = jwt_decode(token);\n        let exp = deT.exp;\n        let time = Date.now() / 1000;\n\n        if (time > exp) {\n          router.push('/login');\n        } else {\n          let sess = JSON.parse(localStorage.getItem(\"session\"));\n          setSession({\n            session: sess,\n            user: JSON.parse(localStorage.getItem(\"user\"))\n          });\n\n          if (sess === null && !router.pathname.includes('step')) {\n            router.push('/onboard');\n          }\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/store.js"],"names":["createContext","useContext","ReactNode","useState","useEffect","useRouter","jwt_decode","authContextDefaultValues","session","updateSession","deleteSession","initSession","AuthContext","useAuth","AuthProvider","children","setSession","s","console","log","running_session","undefined","localStorage","setItem","JSON","stringify","removeItem","router","push","data","token","user","value","isAuth","publicPath","getItem","includes","pathname","deT","exp","time","Date","now","sess","parse"],"mappings":"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","sourcesContent":["import {createContext, useContext, ReactNode, useState, useEffect} from \"react\";\nimport { useRouter } from 'next/router'\nimport jwt_decode from \"jwt-decode\";\n\nconst authContextDefaultValues = {\n    session: null,\n    updateSession: () => {},\n    deleteSession: () => {},\n    initSession: () => {},\n};\nconst AuthContext = createContext(authContextDefaultValues);\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [session, setSession] = useState(null);\n    const updateSession = (s) => {\n        if (typeof window !== \"undefined\"){\n            console.log(s)\n            console.log(s.running_session)\n            if(s.running_session !== undefined){\n                localStorage.setItem(\"session\",JSON.stringify(s.running_session));\n                setSession({session: s.running_session});\n            }\n\n        }\n    };\n    const deleteSession = () => {\n        setSession(null);\n        if (typeof window !== \"undefined\"){\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"session\");\n        }\n        router.push('/')\n    };\n    const initSession = (data) => {\n        if (typeof window !== \"undefined\"){\n            if(data.running_session === null){\n                localStorage.setItem(\"session\",null);\n            }else{\n                localStorage.setItem(\"session\",JSON.stringify(data.running_session));\n            }\n            localStorage.setItem(\"token\",data.token);\n            localStorage.setItem(\"user\",JSON.stringify(data.user));\n\n        }\n        setSession(data);\n        if(data.running_session !== null){\n           router.push('/roadmap')\n        }\n        else{\n           router.push('/onboard')\n        }\n    };\n    const value = {\n        session,\n        updateSession,\n        deleteSession,\n        initSession\n    };\n    let isAuth = false;\n    const publicPath = ['/','/login','/signin'];\n    const router = useRouter()\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\"){\n            isAuth  = localStorage.getItem(\"user\") !== null;\n\n           if(!isAuth){\n               if(!publicPath.includes(router.pathname)){\n                   deleteSession();\n                   router.push('/')\n               }else{\n                   deleteSession();\n                   router.push('/')\n               }\n           }\n           else{\n\n               let token = localStorage.getItem(\"token\");\n               let deT = jwt_decode(token);\n               let exp = deT.exp;\n               let time = Date.now()/1000;\n               if(time > exp){\n                   router.push('/login')\n               }\n               else{\n                   let sess = JSON.parse(localStorage.getItem(\"session\"));\n                   setSession({session: sess,\n                       user:JSON.parse(localStorage.getItem(\"user\"))})\n\n                   if(sess === null && !router.pathname.includes('step')){\n                       router.push('/onboard')\n                   }\n               }\n           }\n        }\n\n    }, [])\n\n    return (\n        <>\n            <AuthContext.Provider value={value}>\n                {children}\n            </AuthContext.Provider>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}