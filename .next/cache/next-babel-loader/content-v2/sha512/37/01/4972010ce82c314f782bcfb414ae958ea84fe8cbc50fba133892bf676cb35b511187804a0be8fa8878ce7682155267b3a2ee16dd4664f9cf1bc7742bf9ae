{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/components/BGImage.js\";\nimport { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport styled from \"styled-components\";\nimport bg from \"../public/onboard/onboard1_pc.png\";\nconst Box = styled.div.withConfig({\n  displayName: \"BGImage__Box\",\n  componentId: \"sc-16104cp-0\"\n})([\"position:fixed;z-index:0;top:0;\"]);\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction BGImage() {\n  const {\n    0: width,\n    1: setWidth\n  } = useState();\n  const {\n    0: height,\n    1: setheight\n  } = useState();\n  useEffect(() => {\n    const {\n      width,\n      height\n    } = getWindowDimensions();\n    setWidth(width);\n    setheight(height);\n  }, []);\n  useEffect(() => {\n    function handleResize() {\n      const {\n        width,\n        height\n      } = getWindowDimensions();\n      setWidth(width);\n      setheight(height);\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  if (width && height) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: bg,\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\nexport default BGImage;","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/components/BGImage.js"],"names":["useEffect","useState","Image","styled","bg","Box","div","getWindowDimensions","innerWidth","width","innerHeight","height","window","BGImage","setWidth","setheight","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,mCAAf;AAEA,MAAMC,GAAG,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,uCAAT;;AAMA,SAASC,mBAAT,GAA+B;AAC3B,QAAM;AAAEC,IAAAA,UAAU,EAAEC,KAAd;AAAqBC,IAAAA,WAAW,EAAEC;AAAlC,MAA6CC,MAAnD;AACA,SAAO;AACHH,IAAAA,KADG;AAEHE,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,OAAT,GAAmB;AACf,QAAM;AAAA,OAACJ,KAAD;AAAA,OAAQK;AAAR,MAAoBb,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASI;AAAT,MAAsBd,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAES,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAoBJ,mBAAmB,EAA7C;AAEAO,IAAAA,QAAQ,CAACL,KAAD,CAAR;AAEAM,IAAAA,SAAS,CAACJ,MAAD,CAAT;AACH,GANQ,EAMN,EANM,CAAT;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASgB,YAAT,GAAwB;AACpB,YAAM;AAAEP,QAAAA,KAAF;AAASE,QAAAA;AAAT,UAAoBJ,mBAAmB,EAA7C;AAEAO,MAAAA,QAAQ,CAACL,KAAD,CAAR;AAEAM,MAAAA,SAAS,CAACJ,MAAD,CAAT;AACH;;AAEDC,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAIP,KAAK,IAAIE,MAAb,EAAqB;AACjB,wBACI,QAAC,GAAD;AAAA,6BACI,QAAC,KAAD;AACI,QAAA,GAAG,EAAEP,EADT;AAEI,QAAA,KAAK,EAAEK,KAFX;AAGI,QAAA,MAAM,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAED,SAAO,IAAP;AACH;;AAED,eAAeE,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport styled from \"styled-components\";\nimport bg from \"../public/onboard/onboard1_pc.png\"\n\nconst Box = styled.div`\n  position: fixed;\n  z-index: 0;\n  top: 0;\n`;\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n}\n\nfunction BGImage() {\n    const [width, setWidth] = useState();\n    const [height, setheight] = useState();\n\n    useEffect(() => {\n        const { width, height } = getWindowDimensions();\n\n        setWidth(width);\n\n        setheight(height);\n    }, []);\n\n    useEffect(() => {\n        function handleResize() {\n            const { width, height } = getWindowDimensions();\n\n            setWidth(width);\n\n            setheight(height);\n        }\n\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    if (width && height) {\n        return (\n            <Box>\n                <Image\n                    src={bg}\n                    width={width}\n                    height={height}\n                />\n            </Box>\n        );\n    }\n\n    return null;\n}\n\nexport default BGImage;\n"]},"metadata":{},"sourceType":"module"}