{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Projects/web/dipongo_app/libs/contextLib.js\";\nimport { createContext, useContext, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport { useState } from \"preact/hooks\";\nconst AppContext = /*#__PURE__*/createContext({});\nexport function AppWrapper({\n  children\n}) {\n  const {\n    0: session,\n    1: setSession\n  } = useState(null);\n  const publicPath = ['/', '/login', '/signin'];\n  const router = useRouter();\n  let isAuth = false;\n\n  if (false) {\n    isAuth = localStorage.getItem(\"user\") !== null;\n  }\n\n  useEffect(() => {\n    if (!isAuth) {\n      if (!publicPath.includes(router.pathname)) {\n        router.push('/', undefined, {\n          shallow: true\n        });\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: session,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":{"version":3,"sources":["/Users/macbookpro/Projects/web/dipongo_app/libs/contextLib.js"],"names":["createContext","useContext","useEffect","useRouter","useState","AppContext","AppWrapper","children","session","setSession","publicPath","router","isAuth","localStorage","getItem","includes","pathname","push","undefined","shallow","useAppContext"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AAEA,MAAMC,UAAU,gBAAGL,aAAa,CAAC,EAAD,CAAhC;AAEA,OAAO,SAASM,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AACrC,QAAM;AAAA,OAACC,OAAD;AAAA,OAASC;AAAT,MAAuBL,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMM,UAAU,GAAG,CAAC,GAAD,EAAK,QAAL,EAAc,SAAd,CAAnB;AAEA,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAIS,MAAM,GAAG,KAAb;;AACA,aAAkC;AAC9BA,IAAAA,MAAM,GAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAA3C;AACH;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACU,MAAJ,EAAW;AACP,UAAG,CAACF,UAAU,CAACK,QAAX,CAAoBJ,MAAM,CAACK,QAA3B,CAAJ,EAAyC;AACrCL,QAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ,EAAiBC,SAAjB,EAA4B;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAA5B;AACH;AAEJ;AAEJ,GARQ,EAQN,EARM,CAAT;AASA,sBACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEX,OAA5B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,SAASa,aAAT,GAAyB;AAC5B,SAAOnB,UAAU,CAACI,UAAD,CAAjB;AACH","sourcesContent":["import {createContext, useContext, useEffect} from 'react';\nimport {useRouter} from \"next/router\";\nimport {useState} from \"preact/hooks\";\n\nconst AppContext = createContext({});\n\nexport function AppWrapper({ children }) {\n    const [session,setSession] = useState(null)\n    const publicPath = ['/','/login','/signin'];\n\n    const router = useRouter()\n    let isAuth = false;\n    if (typeof window !== \"undefined\"){\n        isAuth  = localStorage.getItem(\"user\") !== null;\n    }\n\n    useEffect(() => {\n        if(!isAuth){\n            if(!publicPath.includes(router.pathname)){\n                router.push('/', undefined, { shallow: true })\n            }\n\n        }\n\n    }, [])\n    return (\n        <AppContext.Provider value={session}>\n            {children}\n        </AppContext.Provider>\n    );\n}\n\nexport function useAppContext() {\n    return useContext(AppContext);\n}\n"]},"metadata":{},"sourceType":"module"}